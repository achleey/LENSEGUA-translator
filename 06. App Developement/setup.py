"""
This is a setup.py script generated by py2applet

Usage:
    python setup.py py2app
"""
import sys
from setuptools import setup

sys.setrecursionlimit(5000)  # o un valor mayor si sigue dando el error

APP = ['gui_complete.py']
DATA_FILES = [
    ('', ['button_1.png', 'button_2.png', 'colored_button_1.png', 'colored_button_2.png', 'image_1.png', 'image_2.png',
          'image_3.png', 'image_4.png', 'Model1HandP.p', 'Model1HandV.p', 'Model2HandsP.p', 'Model2HandsV.p',
          'ModelHandAndBodyP.p', 'ModelHandAndBodyV.p', 'ModelHandAndFaceP.p', 'ModelHandAndFaceV.p',
          'switch_off.png', 'switch_on.png', 'actionV.tflite', 'actionP.tflite']),

    ('tensorflow/python', [
        '/Users/ashley/Desktop/Diseño e Innovación de Ingeniería 1/Tesis/Pruebas/PrimeraPrueba/.venv/lib/python3.10/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so'
    ]),

    ('assets/IBM Plex Sans', [
        'assets/IBM Plex Sans/IBMPlexSans-Bold.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-BoldItalic.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-ExtraLight.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-ExtraLightItalic.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-Italic.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-Light.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-LightItalic.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-Medium.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-MediumItalic.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-Regular.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-SemiBold.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-SemiBoldItalic.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-Thin.ttf',
        'assets/IBM Plex Sans/IBMPlexSans-ThinItalic.ttf',
        'assets/IBM Plex Sans/OFL.txt',
    ]),

    ('audio', ['./audio/A.mp3', './audio/B.mp3', './audio/C.mp3', './audio/D.mp3', './audio/E.mp3', './audio/F.mp3',
               './audio/G.mp3', './audio/H.mp3', './audio/I.mp3', './audio/J.mp3', './audio/K.mp3', './audio/L.mp3',
               './audio/M.mp3', './audio/N.mp3', './audio/Ñ.mp3', './audio/O.mp3', './audio/P.mp3', './audio/Q.mp3',
               './audio/R.mp3', './audio/S.mp3', './audio/T.mp3', './audio/U.mp3', './audio/V.mp3', './audio/W.mp3',
               './audio/X.mp3', './audio/Y.mp3', './audio/Z.mp3']),
]
OPTIONS = {
    'argv_emulation': True,
    'iconfile': 'app.icns',  # Especifica el ícono (si tienes)
    'plist': 'Info.plist',
    'packages': ['tensorflow', 'cv2', 'numpy', 'mediapipe'],
    'includes': [
        'tensorflow.python',
        'tensorflow.python.trackable',
        'tensorflow.python.trackable.data_structures',
        '_pywrap_tensorflow_internal',
        'PyQt6',
        'PyQt6.QtWidgets',
        'PyQt6.QtGui',
        'PyQt6.QtCore',
        'PyQt6.QtMultimedia'
        ],
    'frameworks': ['/Library/Frameworks/Python.framework/Versions/3.10'],
    'excludes': ['PyInstaller', 'PySide2', 'PySide2.QtWebEngineWidgets', 'tomli', 'importlib_resources', 'more_itertools', 'platformdirs'
],
    'site_packages': True,  # Incluye las dependencias del entorno virtual
}

setup(
    app=APP,
    data_files=DATA_FILES,
    options={'py2app': OPTIONS},
    setup_requires=['py2app'],
)
